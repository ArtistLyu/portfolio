function updateMousePosition(t,e){pointer.x=t,pointer.y=e}function update(t){mouseMoved||(pointer.x=(.5+.3*Math.cos(.002*t)*Math.sin(.005*t))*window.innerWidth,pointer.y=(.5+.2*Math.cos(.005*t)+.1*Math.cos(.01*t))*window.innerHeight),ctx.clearRect(0,0,canvas.width,canvas.height),trail.forEach((t,e)=>{const i=0===e?pointer:trail[e-1],a=0===e?.4*params.spring:params.spring;t.dx+=(i.x-t.x)*a,t.dy+=(i.y-t.y)*a,t.dx*=params.friction,t.dy*=params.friction,t.x+=t.dx,t.y+=t.dy}),ctx.lineCap="round",ctx.beginPath(),ctx.moveTo(trail[0].x,trail[0].y);for(let t=1;t<trail.length-1;t++){const e=.5*(trail[t].x+trail[t+1].x),i=.5*(trail[t].y+trail[t+1].y);ctx.quadraticCurveTo(trail[t].x,trail[t].y,e,i),ctx.lineWidth=params.widthFactor*(params.pointsNumber-t),ctx.stroke()}ctx.lineTo(trail[trail.length-1].x,trail[trail.length-1].y),ctx.stroke(),window.requestAnimationFrame(update)}function setupCanvas(){canvas.width=window.innerWidth,canvas.height=window.innerHeight}const canvas=document.querySelector("canvas"),ctx=canvas.getContext("2d");let mouseMoved=!1;const pointer={x:.5*window.innerWidth,y:.5*window.innerHeight},params={pointsNumber:40,widthFactor:.3,mouseThreshold:.6,spring:.4,friction:.5},trail=new Array(params.pointsNumber);for(let t=0;t<params.pointsNumber;t++)trail[t]={x:pointer.x,y:pointer.y,dx:0,dy:0};window.addEventListener("click",t=>{updateMousePosition(t.pageX,t.pageY)}),window.addEventListener("mousemove",t=>{mouseMoved=!0,updateMousePosition(t.pageX,t.pageY)}),window.addEventListener("touchmove",t=>{mouseMoved=!0,updateMousePosition(t.targetTouches[0].pageX,t.targetTouches[0].pageY)}),setupCanvas(),update(0),window.addEventListener("resize",setupCanvas);